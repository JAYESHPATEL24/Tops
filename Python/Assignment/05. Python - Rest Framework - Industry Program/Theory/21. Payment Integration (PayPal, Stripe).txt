1). Introduction to integrating payment gateways like PayPal and Stripe.

   - **Payment Gateways Overview**:
     - Payment gateways like PayPal and Stripe facilitate secure payment transactions between customers and merchants.
     - They provide APIs for integrating payment systems into websites or applications.

   - **PayPal API**:
     - PayPal allows you to accept payments through its REST API for various methods like credit cards, PayPal accounts, and more.

     **Getting Started with PayPal Integration**:
     1. **Create a PayPal Developer Account**:
        - Sign up at [PayPal Developer](https://developer.paypal.com/).
     2. **Create an App**:
        - From the dashboard, create an app to obtain your *Client ID* and *Client Secret*.
     3. **Install PayPal SDK**:
        - Install the Python PayPal REST SDK:
          ```bash
          pip install paypalrestsdk
          ```

     **Example Python Code to Create a Payment with PayPal**:
     ```python
     import paypalrestsdk

     def create_paypal_payment():
         paypalrestsdk.configure({
             "mode": "sandbox",  # Use "live" for production
             "client_id": "YOUR_PAYPAL_CLIENT_ID",
             "client_secret": "YOUR_PAYPAL_CLIENT_SECRET"
         })

         payment = paypalrestsdk.Payment({
             "intent": "sale",
             "payer": {"payment_method": "paypal"},
             "redirect_urls": {
                 "return_url": "https://your-site.com/return",
                 "cancel_url": "https://your-site.com/cancel"
             },
             "transactions": [{
                 "item_list": {
                     "items": [{
                         "name": "Sample Item",
                         "sku": "001",
                         "price": "10.00",
                         "currency": "USD",
                         "quantity": 1
                     }]
                 },
                 "amount": {"total": "10.00", "currency": "USD"},
                 "description": "This is a sample payment."
             }]
         })

         if payment.create():
             print(f"Payment created successfully! Payment ID: {payment.id}")
         else:
             print(f"Error: {payment.error}")

     # Example usage
     create_paypal_payment()
     ```

   - **Stripe API**:
     - Stripe provides APIs for accepting payments via cards, wallets, and bank transfers. It also supports subscriptions and invoicing.

     **Getting Started with Stripe Integration**:
     1. **Create a Stripe Account**:
        - Sign up at [Stripe](https://stripe.com/).
     2. **Obtain API Keys**:
        - Get your *Publishable Key* and *Secret Key* from the Stripe Dashboard.
     3. **Install Stripe SDK**:
        - Install the Stripe Python library:
          ```bash
          pip install stripe
          ```

     **Example Python Code to Create a Payment with Stripe**:
     ```python
     import stripe

     def create_stripe_payment():
         stripe.api_key = "YOUR_STRIPE_SECRET_KEY"

         # Create a payment intent
         intent = stripe.PaymentIntent.create(
             amount=1000,  # Amount in cents
             currency="usd",
             payment_method_types=["card"]
         )

         print(f"Payment Intent created: {intent['id']}")

     # Example usage
     create_stripe_payment()
     ```

   - **Key Features of Both Gateways**:
     - **PayPal**:
       - Widely recognized and trusted by users.
       - Supports PayPal accounts and guest payments with credit/debit cards.
     - **Stripe**:
       - Offers modern features like subscription management, one-click checkout, and detailed analytics.
       - Focused on developer-friendly tools and seamless integration.

   - **Important Notes**:
     - Use **sandbox mode** for testing with both PayPal and Stripe.
     - Ensure **secure handling of API keys** and use HTTPS in production.
     - Comply with PCI-DSS standards for handling card data when integrating payment systems.
     - Always test payment flows thoroughly before going live.
